{"version":3,"sources":["components/EmailSelector.js","App.js","index.js"],"names":["EmailSelector","emails","setEmails","useState","newEmail","setNewEmail","selectedEmail","setSelectedEmail","useEffect","fetch","then","res","ok","Error","json","data","length","catch","err","console","error","_jsxs","children","_jsx","value","onChange","e","target","map","email","index","type","placeholder","onClick","handleAddEmail","trim","lecturerData","Email","method","headers","body","JSON","stringify","addedLecturer","prev","App","text","setText","className","accept","async","file","event","files","formData","FormData","append","response","result","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"8JAwEeA,MAtEOA,KACpB,MAAOC,EAAQC,GAAaC,mBAAS,KAC9BC,EAAUC,GAAeF,mBAAS,KAClCG,EAAeC,GAAoBJ,mBAAS,IAGnDK,qBAAU,KACRC,MAAM,mGACHC,MAAKC,IACJ,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAM,mCAElB,OAAOF,EAAIG,MAAM,IAElBJ,MAAKK,IAEJb,EAAUa,GACNA,EAAKC,OAAS,GAAGT,EAAiBQ,EAAK,GAAG,IAE/CE,OAAMC,GAAOC,QAAQC,MAAM,yBAA0BF,IAAK,GAC5D,IA2BH,OACEG,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,yBACJC,cAAA,UACEC,MAAOlB,EACPmB,SAAUC,GAAKnB,EAAiBmB,EAAEC,OAAOH,OAAOF,SAE/CrB,EAAO2B,KAAI,CAACC,EAAOC,IAClBP,cAAA,UAAoBC,MAAOK,EAAMP,SAAEO,GAAtBC,OAGjBP,cAAA,MAAAD,SAAI,8BACJC,cAAA,SACEQ,KAAK,QACLC,YAAY,cACZR,MAAOpB,EACPqB,SAAUC,GAAKrB,EAAYqB,EAAEC,OAAOH,SAEtCD,cAAA,UAAQU,QA1CWC,KACrB,IAAK9B,EAAS+B,OAAQ,OACtB,MAAMC,EAAe,CAAEC,MAAOjC,GAE9BK,MAAM,kGAAmG,CACvG6B,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,KAEpB1B,MAAKC,IACJ,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAM,wCAElB,OAAOF,EAAIG,MAAM,IAElBJ,MAAKiC,IAEJzC,GAAU0C,GAAQ,IAAIA,EAAMD,EAAcN,SAC1C9B,EAAiBoC,EAAcN,OAC/BhC,EAAY,GAAG,IAEhBY,OAAMC,GAAOC,QAAQC,MAAM,sBAAuBF,IAAK,EAqBxBI,SAAC,2BAC7B,ECxBKuB,MAzCf,WACI,MAAOC,EAAMC,GAAW5C,mBAAS,IA4BjC,OACIkB,eAAA,OAAK2B,UAAU,MAAK1B,SAAA,CAChBD,eAAA,UAAQ2B,UAAU,aAAY1B,SAAA,CAC1BC,cAAA,MAAAD,SAAI,8BACJC,cAAA,SAAOQ,KAAK,OAAOkB,OAAO,UAAUxB,SA9BtByB,UACtB,MAAMC,EAAOC,EAAMzB,OAAO0B,MAAM,GAChC,IAAKF,EAAM,OAEX,MAAMG,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASL,GAEzB,IAEI,MAAMM,QAAiBhD,MAAM,+FAAgG,CACzH6B,OAAQ,OACRE,KAAMc,IAGV,IAAKG,EAAS7C,GACV,MAAM,IAAIC,MAAM,sBAGpB,MAAM6C,QAAeD,EAAS3C,OAC9BiC,EAAQW,EAAOZ,KACnB,CAAE,MAAO1B,GACLD,QAAQC,MAAM,UAAWA,GACzB2B,EAAQ,4CACZ,KAQQxB,cAAA,KAAAD,SAAIwB,OAERzB,eAAA,QAAAC,SAAA,CAAM,WAAQC,cAACvB,EAAa,IAAE,SAG1C,ECrCA2D,IAASC,OACPrC,cAACsC,IAAMC,WAAU,CAAAxC,SACfC,cAACsB,EAAG,MAENkB,SAASC,eAAe,Q","file":"static/js/main.d0fb1d73.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst EmailSelector = () => {\r\n  const [emails, setEmails] = useState([]);\r\n  const [newEmail, setNewEmail] = useState('');\r\n  const [selectedEmail, setSelectedEmail] = useState('');\r\n\r\n  // Beim Mounten werden die bestehenden E-Mails per GET abgefragt\r\n  useEffect(() => {\r\n    fetch('https://wrexhamuni-ocr-webapp-deeaeydrf2fdcfdy.uksouth-01.azurewebsites.net/api/lecturer/emails')\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Fehler beim Abrufen der E-Mails\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        // Erwartung: data ist ein Array von Strings, z.B. [\"Daniel.Doroschenko@outlook.com\", ...]\r\n        setEmails(data);\r\n        if (data.length > 0) setSelectedEmail(data[0]);\r\n      })\r\n      .catch(err => console.error('Error fetching emails:', err));\r\n  }, []);\r\n\r\n  // Beim Hinzufügen einer neuen E-Mail wird ein POST-Aufruf ausgeführt\r\n  const handleAddEmail = () => {\r\n    if (!newEmail.trim()) return;\r\n    const lecturerData = { Email: newEmail };\r\n\r\n    fetch('https://wrexhamuni-ocr-webapp-deeaeydrf2fdcfdy.uksouth-01.azurewebsites.net/api/lecturer/emails', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(lecturerData)\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          throw new Error('Fehler beim Hinzufügen der E-Mail');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(addedLecturer => {\r\n        // Es wird angenommen, dass das zurückgegebene Objekt eine Eigenschaft \"Email\" enthält\r\n        setEmails(prev => [...prev, addedLecturer.Email]);\r\n        setSelectedEmail(addedLecturer.Email);\r\n        setNewEmail('');\r\n      })\r\n      .catch(err => console.error('Error adding email:', err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Wähle eine E-Mail</h2>\r\n      <select\r\n        value={selectedEmail}\r\n        onChange={e => setSelectedEmail(e.target.value)}\r\n      >\r\n        {emails.map((email, index) => (\r\n          <option key={index} value={email}>{email}</option>\r\n        ))}\r\n      </select>\r\n      <h3>Neue E-Mail hinzufügen</h3>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Neue E-Mail\"\r\n        value={newEmail}\r\n        onChange={e => setNewEmail(e.target.value)}\r\n      />\r\n      <button onClick={handleAddEmail}>E-Mail hinzufügen</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailSelector;","import React, { useState } from 'react';\r\nimport EmailSelector from './components/EmailSelector';\r\n\r\nfunction App() {\r\n    const [text, setText] = useState('');\r\n\r\n    const handleImageUpload = async (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        try {\r\n\r\n            const response = await fetch('https://wrexhamuni-ocr-webapp-deeaeydrf2fdcfdy.uksouth-01.azurewebsites.net/api/image/upload', {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Fehler beim Upload');\r\n            }\r\n\r\n            const result = await response.json();\r\n            setText(result.text);\r\n        } catch (error) {\r\n            console.error('Fehler:', error);\r\n            setText('Fehler beim Upload oder bei der Erkennung');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Package Management System</h1>\r\n                <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\r\n                <p>{text}</p>\r\n            </header>\r\n            <main>        <EmailSelector/> </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}